package cls.util;


import android.content.Context;
import android.util.Log;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

import java.io.StringReader;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilderFactory;

import cls.exploit.R;

public class FeedParser {

    public static ArrayList<Item> parseXml(String xml, Context con) {
        Document doc;
        ArrayList<Item> items = new ArrayList<Item>(5);
        boolean add = false;
        boolean webapps = Db.getPreference(con, con.getString(R.string.string_webapps), true);
        boolean local = Db.getPreference(con, con.getString(R.string.string_local), true);
        boolean papers = Db.getPreference(con, con.getString(R.string.string_papers), true);
        boolean shellcode = Db.getPreference(con, con.getString(R.string.string_shellcode), true);
        boolean dos = Db.getPreference(con, con.getString(R.string.string_dos), true);
        boolean remote = Db.getPreference(con, con.getString(R.string.string_remote), true);

        try {

            doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));
            Element root = doc.getDocumentElement();
            NodeList notes = root.getChildNodes();
            for (int i = 0; i < notes.getLength(); i++) {
                Node c = notes.item(i);
                if (c.getNodeType() == Node.ELEMENT_NODE && c.getNodeName().equalsIgnoreCase("channel")) {
                    NodeList noteDetails = c.getChildNodes();
                    for (int j = 0; j < noteDetails.getLength(); j++) {
                        Node c1 = noteDetails.item(j);

                        if (c1.getNodeType() == Node.ELEMENT_NODE && c1.getNodeName().equalsIgnoreCase("item")) {
                            NodeList noteDetails1 = c1.getChildNodes();
                            int l = noteDetails1.getLength();
                            String title = "";
                            String link = "";
                            String description = "";
                            String category = "";
                            String date = "";

                            for (int k = 0; k < l; k++) {
                                Node c2 = noteDetails1.item(k);
                                if (c2.getNodeType() == Node.ELEMENT_NODE) {
                                    Element detail = (Element) c2; //cast
                                    String nodeName = detail.getNodeName(); //leggo il nome del tag
                                    String nodeValue = detail.getFirstChild().getNodeValue();//leggo il testo in esso contenuto
                                    if (nodeName.equalsIgnoreCase("title")) {
                                        title = nodeValue;
                                    } else if (nodeName.equalsIgnoreCase("link")) {
                                        link = nodeValue;
                                    } else if (nodeName.equalsIgnoreCase("description")) {
                                        description = nodeValue;
                                    } else if (nodeName.equalsIgnoreCase("category")) {
                                        category = nodeValue;
                                    } else if (nodeName.equalsIgnoreCase("pubDate")) {
                                        date = nodeValue;
                                    }

                                }
                            }
                            if (category.equalsIgnoreCase("webapps")) {

                                add = webapps;
                            } else if (category.equalsIgnoreCase("local")) {

                                add = local;
                            } else if (category.equalsIgnoreCase("remote")) {

                                add = remote;
                            } else if (category.equalsIgnoreCase("dos")) {

                                add = dos;
                            } else if (category.equalsIgnoreCase("papers")) {

                                add = papers;
                            } else if (category.equalsIgnoreCase("shellcode")) {

                                add = shellcode;
                            }
                            if (add)
                                items.add(new Item(title, description, link, category, date));
                        }

                    }

                }
            }
        } catch (Exception e) {
            Log.e("clshack", e.toString());
        }
        return items;
    }
}
